!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CFLAGS	Makefile	/^CFLAGS=-Wall -xc -g$/;"	m
CopyArray	test.c	/^void CopyArray(int* A, int iBegin, int iEnd, int* B)$/;"	f
JournalPointerCount	sample.c	/^    int JournalPointerCount;$/;"	m	struct:__anon2	file:
JournalPointerCount	test.c	/^    int JournalPointerCount;$/;"	m	struct:__anon4	file:
MemoryStats	sample.c	/^} MemoryStats;$/;"	t	typeref:struct:__anon2	file:
MemoryStats	test.c	/^} MemoryStats;$/;"	t	typeref:struct:__anon4	file:
PointerStats	sample.c	/^} PointerStats;$/;"	t	typeref:struct:__anon1	file:
PointerStats	test.c	/^} PointerStats;$/;"	t	typeref:struct:__anon3	file:
TopDownMerge	test.c	/^void TopDownMerge(int* A, int iBegin, int iMiddle, int iEnd, int* B)$/;"	f
TopDownMergeSort	test.c	/^void TopDownMergeSort(int* A, int* B, int n)$/;"	f
TopDownSplitMerge	test.c	/^void TopDownSplitMerge(int* B, int iBegin, int iEnd, int* A)$/;"	f
__dbg_h_	dbg.h	2;"	d
begin	test.c	/^clock_t begin;$/;"	v
bubble_sort_a	test.c	/^int* bubble_sort_a(int* target, int size)$/;"	f
bubble_sort_b	test.c	/^int* bubble_sort_b(int* target, int size)$/;"	f
bubble_sort_b_and_c	test.c	/^int* bubble_sort_b_and_c(int* target, int size)$/;"	f
bubble_sort_b_and_c_and_e_and_f	test.c	/^int* bubble_sort_b_and_c_and_e_and_f(int* target, int size)$/;"	f
bubble_sort_b_and_e	test.c	/^int* bubble_sort_b_and_e(int* target, int size)$/;"	f
bubble_sort_b_and_e_and_f	test.c	/^int* bubble_sort_b_and_e_and_f(int* target, int size)$/;"	f
bubble_sort_b_and_f	test.c	/^int* bubble_sort_b_and_f(int* target, int size)$/;"	f
bubble_sort_c	test.c	/^int* bubble_sort_c(int* target, int size)$/;"	f
bubble_sort_c_and_e	test.c	/^int* bubble_sort_c_and_e(int* target, int size)$/;"	f
bubble_sort_c_and_f	test.c	/^int* bubble_sort_c_and_f(int* target, int size)$/;"	f
bubble_sort_d	test.c	/^int* bubble_sort_d(int* target, int size)$/;"	f
bubble_sort_e	test.c	/^int* bubble_sort_e(int* target, int size)$/;"	f
bubble_sort_e_and_f	test.c	/^int* bubble_sort_e_and_f(int* target, int size)$/;"	f
bubble_sort_f	test.c	/^int* bubble_sort_f(int* target, int size)$/;"	f
check	dbg.h	23;"	d
check_debug	dbg.h	29;"	d
check_mem	dbg.h	27;"	d
clean_errno	dbg.h	15;"	d
clocks	test.c	/^double clocks;$/;"	v
count_assign	test.c	/^int count_assign;$/;"	v
count_ncomp	test.c	/^int count_ncomp;$/;"	v
debug	dbg.h	10;"	d
debug	dbg.h	12;"	d
die	sample.c	/^void die(char *message) {$/;"	f
die	test.c	/^void die(char* message)$/;"	f
end	test.c	/^clock_t end;$/;"	v
filldata	sample.c	/^void filldata(int *data, int size) {$/;"	f
filldata	test.c	/^void filldata(int* data, int size)$/;"	f
freememory	sample.c	/^void freememory(int **data, char* ptrName) {$/;"	f
freememory	test.c	/^void freememory(int** data, char* ptrName)$/;"	f
getmemory	sample.c	/^void getmemory(int **data, char* ptrName, int memory_size) {$/;"	f
getmemory	test.c	/^void getmemory(int** data, char* ptrName, int memory_size)$/;"	f
getsize	sample.c	/^void getsize(int *size) {$/;"	f
getsize	test.c	/^void getsize(int* size) { scanf("%d", size); }$/;"	f
insertion_sort	test.c	/^int* insertion_sort(int* target, int size)$/;"	f
is_sorted	test.c	/^int is_sorted(int* data, int size)$/;"	f
log_err	dbg.h	17;"	d
log_info	dbg.h	21;"	d
log_warn	dbg.h	19;"	d
main	sample.c	/^int main(int argc, char *argv[]) {$/;"	f
main	test.c	/^int main(int argc, char* argv[])$/;"	f
memJournal	sample.c	/^    PointerStats *memJournal;$/;"	m	struct:__anon2	file:
memJournal	test.c	/^    PointerStats* memJournal;$/;"	m	struct:__anon4	file:
memUsed	sample.c	/^    int memUsed;$/;"	m	struct:__anon2	file:
memUsed	test.c	/^    int memUsed;$/;"	m	struct:__anon4	file:
memUsedByJournal	sample.c	/^    int memUsedByJournal;$/;"	m	struct:__anon2	file:
memUsedByJournal	test.c	/^    int memUsedByJournal;$/;"	m	struct:__anon4	file:
memoryStats	sample.c	/^MemoryStats memoryStats;$/;"	v
memoryStats	test.c	/^MemoryStats memoryStats;$/;"	v
mergesort_pointer	test.c	/^typedef void (*mergesort_pointer)(int* target, int* working_array, int size);$/;"	t	file:
pointerMemory	sample.c	/^    int pointerMemory;$/;"	m	struct:__anon1	file:
pointerMemory	test.c	/^    int pointerMemory;$/;"	m	struct:__anon3	file:
pointerName	sample.c	/^    char* pointerName;$/;"	m	struct:__anon1	file:
pointerName	test.c	/^    char* pointerName;$/;"	m	struct:__anon3	file:
print	sample.c	/^void print(int *data, int size) {$/;"	f
print	test.c	/^void print(int* data, int size)$/;"	f
quicksort	test.c	/^int* quicksort(int* target, int first, int last)$/;"	f
quicksort_pointer	test.c	/^typedef int* (*quicksort_pointer)(int* target, int first, int last);$/;"	t	file:
selection_sort	test.c	/^int* selection_sort(int* target, int size)$/;"	f
sentinel	dbg.h	25;"	d
sort_pointer	test.c	/^typedef int* (*sort_pointer)(int* target, int size);$/;"	t	file:
swap	test.c	/^void swap(int* a, int* b)$/;"	f
swap_three	test.c	/^void swap_three(int* a, int* b, int* c)$/;"	f
test_mergesort	test.c	/^void test_mergesort(int* data, int size, mergesort_pointer func,$/;"	f
test_quicksort	test.c	/^void test_quicksort(int* data, int size, quicksort_pointer func,$/;"	f
test_sort	test.c	/^void test_sort($/;"	f
time_spent	test.c	/^double time_spent;$/;"	v
